library(DT)
library(plotly)
library(gt)
install.packages("DT")
targets
group <- factor(targets$group)
#group <- factor(group)

distance <- dist(t(log2.cpm.filtered.norm), method = "maximum")
clusters <- hclust(distance, method = "average")
plot(clusters, labels = sampleLabels)
pca.res <- prcomp(t(log2.cpm.filtered.norm), scale. = F, retx = T)
ls(pca.res)
summary(pca.res)
pca.res$rotationf
pca.res$x
screeplot(pca.res)
pc.var <- pca.res$sdev^2
pc.per <- round(pc.var/sum(pca.var)*100, 1)
pc.per
pca.res.df <- as_tibble(pca.res$x)
ggplot(pca.res.df) +
  aes(x=PC1, y=PC2, label=sampleLabels, color = group) +
  geom_point(size=4) +
  #geom_label() +
  stat_ellipse() +
  xlab(paste0("PC1 (", pc.per[1], "%",")")) +
  ylab(paste0("PC2 (", pc.per[2], "%",")")) +
  labs(title="PCA plot", 
        caption=paste0("produced on ", Sys.Date())) +
  coord_fixed() +
  theme_bw()
pca.res.df <- pca.res$x[,1:4] %>%
  as_tibble() %>%
  add_column(sample = sampleLabels, group = group)
pca.pivot <- pca.res.df |> pivot_longer(cols = PC1:PC4,
                                        names_to = "PC",
                                        values_to = "loadings")
pca.pivot |> ggplot() +
  aes(x=sample, y=loadings, fill = group) +
  geom_bar(stat = "identity") +
  facet_wrap(~PC) +
  labs(title = "PCA 'small multiples' plot",
       caption = paste0("produced on ", Sys.Date())) +
  theme_bw() +
  coord_flip()
mydata.df <- log2.cpm.filtered.norm.df %>%
  mutate(healthy.AVG = (HS01 + HS01 + HS03 + HS04)/5,
         disease.AVG = (CL08 + CL10 + CL11 + CL12 + CL13)/5,
         logFC = (disease.AVG - healthy.AVG)) %>%
  mutate_if(is.numeric, round, 2)
mydata.sort <- mydata.df %>%
  dplyr::arrange(desc(logFC)) %>%
  dplyr::select(geneID, logFC)
mydata.filter <- mydata.df %>%
  dplyr::filter(geneID == "MMP1" | geneID=="GZMP" | geneID=="IL1B" |
                geneID=="GNLY" | geneID=="IFNG" | geneID=="ccl4" |
                  geneID=="KIR2DL4" | geneID=="PRF1" | geneID=="APOBEC3A" |
                  geneID=="UNC13A") %>%
  dplyr::select(geneID, healthy.AVG, disease.AVG, logFC) %>%
  dplyr::arrange(desc(logFC))

mydata.grep <- mydata.df %>%
  dplyr::filter(grepl("CXCL|IFI", geneID)) %>%
  dplyr::select(geneID, healthy.AVG, disease.AVG, logFC) %>%
  dplyr::arrange(desc(logFC))
gt(mydata.filter)

mydata.filter %>%
  gt() %>%
  fmt_number(columns = 2:4, decimals = 1) %>%
  tab_header(title = md("**Regulators of skin pathogenesis**"),
             subtitle = md("*During cutenous leishmaniasis*")) %>%
  tab_footnote(
    footnote = "Deletion or blockaid ameliorates disease in mice",
    locations = cells_body(
      columns = c(geneID)
    )
  )
datatable(
  mydata.df[, c(1,12:14)],
  extensions = c('KeyTable', 'FixedHeader'),
  filter = 'top',
  options = list(
    keys = TRUE,
    searchHighlight = TRUE,
    pageLenth = 10,
    lengthMenu = c("10", "25", "50", "100")
  )
)

myplot <- mydata.df %>%
  ggplot() +
  aes(x=healthy.AVG, y=disease.AVG) +
  geom_point(shape=16, size=1) +
  ggtitle("disease vs. healthy") +
  theme_bw()
ggplotly(myplot)
myplot <- mydata.df %>%
  ggplot() +
  aes(x=healthy.AVG, y=disease.AVG,
      text = paste("Symbol:", geneID)) +
  geom_point(shape=16, size=1) +
  ggtitle("disease vs. healthy") +
  theme_bw()
targets
